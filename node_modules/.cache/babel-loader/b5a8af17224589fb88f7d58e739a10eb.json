{"ast":null,"code":"import _objectSpread from \"D:\\\\reactapp\\\\banjo-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDD-2vEkAN-_kR8t4nlVVWY-jctrwmSowA\",\n  authDomain: \"banjo-clothing.firebaseapp.com\",\n  databaseURL: \"https://banjo-clothing.firebaseio.com\",\n  projectId: \"banjo-clothing\",\n  storageBucket: \"banjo-clothing.appspot.com\",\n  messagingSenderId: \"273162104744\",\n  appId: \"1:273162104744:web:3182de98990a4b8391379d\",\n  measurementId: \"G-M7KGCHH6ED\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["D:/reactapp/banjo-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,gCAFH;AAGTC,EAAAA,WAAW,EAAE,uCAHJ;AAITC,EAAAA,SAAS,EAAE,gBAJF;AAKTC,EAAAA,aAAa,EAAE,4BALN;AAMTC,EAAAA,iBAAiB,EAAE,cANV;AAOTC,EAAAA,KAAK,EAAE,2CAPE;AAQTC,EAAAA,aAAa,EAAE;AARN,CAAb;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAmC;AAE1E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAEC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAf;AAEA,QAAMC,QAAQ,GAAE,MAAMJ,OAAO,CAACK,GAAR,EAAtB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAAA,UAEZC,WAFY,GAEQT,QAFR,CAEZS,WAFY;AAAA,UAECC,KAFD,GAEQV,QAFR,CAECU,KAFD;AAGlB,UAAMC,QAAQ,GAAC,IAAIC,IAAJ,EAAf;;AAEA,QAAG;AAED,YAAMV,OAAO,CAACW,GAAR;AACFJ,QAAAA,WADE;AAEFC,QAAAA,KAFE;AAGFC,QAAAA;AAHE,SAICV,cAJD,EAAN;AAQD,KAVD,CAUC,OAAMa,KAAN,EAAY;AAEXC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AAEF;;AACD,SAAOf,OAAP;AACD,CA9BM;AAgCP,OAAO,MAAMgB,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAqC;AAE5E,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AACA,QAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AACEH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAI;AAC5B,UAAMC,SAAS,GAAGL,aAAa,CAACjB,GAAd,EAAlB;AACAmB,IAAAA,KAAK,CAACV,GAAN,CAAUa,SAAV,EAAqBD,GAArB;AAEC,GAJD;AAMA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AAEH,CAZM;AAePtC,QAAQ,CAACuC,aAAT,CAAuBtC,MAAvB;AAEA,OAAO,MAAMuC,IAAI,GAAExC,QAAQ,CAACwC,IAAT,EAAZ;AACP,OAAO,MAAM1B,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AAEP,MAAM2B,QAAQ,GAAG,IAAIzC,QAAQ,CAACwC,IAAT,CAAcE,kBAAlB,EAAjB;AAEFD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAE,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA7B;AACP,eAAezC,QAAf","sourcesContent":["\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyDD-2vEkAN-_kR8t4nlVVWY-jctrwmSowA\",\r\n    authDomain: \"banjo-clothing.firebaseapp.com\",\r\n    databaseURL: \"https://banjo-clothing.firebaseio.com\",\r\n    projectId: \"banjo-clothing\",\r\n    storageBucket: \"banjo-clothing.appspot.com\",\r\n    messagingSenderId: \"273162104744\",\r\n    appId: \"1:273162104744:web:3182de98990a4b8391379d\",\r\n    measurementId: \"G-M7KGCHH6ED\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalData) =>{\r\n\r\n    if(!userAuth) return;\r\n\r\n    const userRef =firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot= await userRef.get();\r\n\r\n    if(!snapShot.exists){\r\n\r\n      const{displayName, email}=userAuth;\r\n      const createAt=new Date();\r\n       \r\n      try{\r\n\r\n        await userRef.set({\r\n            displayName,\r\n            email,\r\n            createAt,\r\n            ...additionalData\r\n\r\n        })\r\n\r\n      }catch(error){\r\n\r\n        console.log('error creating user', error.message);\r\n      }\r\n\r\n    }\r\n    return userRef;\r\n  }\r\n\r\n  export const addCollectionAndDocuments = async (collectionKey, objectsToAdd)=>{\r\n\r\n    const collectionRef = firestore.collection(collectionKey);\r\n    const batch = firestore.batch();\r\n      objectsToAdd.forEach(obj => {\r\n      const newDocRef = collectionRef.doc();\r\n      batch.set(newDocRef, obj);\r\n      \r\n      });\r\n\r\n      return await batch.commit();\r\n\r\n  }\r\n\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth =firebase.auth();\r\n  export const firestore=firebase.firestore(); \r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nprovider.setCustomParameters({prompt:'select_account'});\r\n\r\nexport const signInWithGoogle= ()=> auth.signInWithPopup(provider);\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}