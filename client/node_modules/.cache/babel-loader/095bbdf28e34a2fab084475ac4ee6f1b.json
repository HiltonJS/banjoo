{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactapp\\\\banjo-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribedFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/reactapp/banjo-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","withSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribedFromSnapshot","componentDidMount","props","collectionRef","collection","unsubscribeFromSnapshot","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAqB,kBAArB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,kCAAxD;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAED,WAAW,CAACL,mBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CACA;AAAA;AAAA;AAAA,SAAIC,KAAJ,GAAU;AACNC,MAAAA,OAAO,EAAC;AADF,KAAV;AAAA,SAGIC,wBAHJ,GAG8B,IAH9B;AAAA;;AAKIC,EAAAA,iBAAiB,GAAE;AAAA,UACRT,iBADQ,GACY,KAAKU,KADjB,CACRV,iBADQ;AAEf,UAAMW,aAAa,GAACb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAApB;AAEA,SAAKC,uBAAL,GAA6BF,aAAa,CAACG,UAAd,CAAyB,MAAMC,QAAN,IAAgB;AACrE,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAC;AAAT,OAAd;AACA,KAJ4B,CAA7B;AAMH;;AAEDW,EAAAA,MAAM,GAAE;AAAA,UACGC,KADH,GACU,KAAKT,KADf,CACGS,KADH;AAAA,UAEIZ,OAFJ,GAEa,KAAKD,KAFlB,CAEIC,OAFJ;AAGJ,WAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGV,KAAD,IAAS,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAEL,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBAA5B;AAA6C,MAAA,MAAM,EAAEV,KAAK,IAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,CAFJ;AAOH;;AA3BL;;AA8BC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACxCtB,EAAAA,iBAAiB,EAAEgB,cAAc,IAAGM,QAAQ,CAACtB,iBAAiB,CAACgB,cAAD,CAAlB;AADJ,CAAL,CAAnC;;AAKA,eAAerB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route} from \"react-router-dom\";\r\nimport {connect } from 'react-redux';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils.js';\r\nimport {updateCollections} from '../../redux/shop/shop.actions'\r\n\r\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner =withSpinner(CollectionsOverview)\r\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component  \r\n{   state={\r\n    loading:true\r\n    };  \r\n    unsubscribedFromSnapshot =null;\r\n\r\n    componentDidMount(){\r\n        const {updateCollections}= this.props;\r\n        const collectionRef=firestore.collection('collections');\r\n\r\n        this.unsubscribeFromSnapshot=collectionRef.onSnapshot(async snapshot=>{\r\n         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n         updateCollections(collectionsMap);\r\n         this.setState({loading:false});\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        const {match}=this.props;\r\n        const { loading}=this.state;\r\n        return(\r\n        \r\n            <div className='shop-page'> \r\n       <Route exact path={`${match.path}`} render={(props)=><CollectionsOverviewWithSpinner isLoading={loading} {...props} />}/>\r\n       <Route  path={`${match.path}/:collectionId`} render={props=>( <CollectionPageWithSpinner isLoading={loading} {...props}/>)} />\r\n        </div>\r\n    );\r\n    }\r\n }\r\n\r\n const mapDispatchToProps = dispatch => ({\r\n\tupdateCollections: collectionsMap=> dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\n     \r\n export default connect(null, mapDispatchToProps)(ShopPage); "]},"metadata":{},"sourceType":"module"}